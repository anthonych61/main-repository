@model Novus_Catalog.Models.Users

@{
    Layout = "~/Views/Shared/_header.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    @*<link href="~/css/validation-rules.css" rel="stylesheet" type="text/css" />*@
    @*<link href="~/css/style.css" rel="stylesheet" media="screen" />*@
    @*<link href="~/css/bootstrap.min.css" rel="stylesheet" media="screen" />*@
    <link href="~/css/validation-rules.css" rel="stylesheet" type="text/css" />
    <link href="http://code.jquery.com/ui/1.10.4/themes/smoothness/jquery-ui.min.css" rel="stylesheet" type="text/css" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
    <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.min.js"></script>
</head>
<body>

    @Html.ValidationSummary(true, "", new { @class = "text-danger", style = "color:red" })

    <div class="row subHeading">
        <div class="span12"><h4>Edit Passwords</h4></div>
    </div>

    @using (Html.BeginForm("User", "User", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="span3">Existing Mentor Password: </div>
            <div class="span6">
                @Html.ValidationMessageFor(model => model.oldMentorPwd, "", new { @style = "color:red" })
                <div id="oldMentorPwd-group" class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(x => x.oldMentorPwd, new { type = "password" })
                        <span id="oldMentorTogglePwd" class="fa fa-fw fa-eye field_icon" />
                    </div>                    
                </div>
            </div>
        </div>

        <div class="row">
            <div class="span3">New Mentor Password: </div>
            <div class="span6">
                @Html.ValidationMessageFor(model => model.newMentorPwd, "", new { @style = "color:red" })
                <div id="newMentorPwd-group" class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(x => x.newMentorPwd, new { type = "password" })
                        <span id="newMentorTogglePwd" class="fa fa-fw fa-eye field_icon" />
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="span3">Existing Administrator Password: </div>
            <div class="span6">
                @Html.ValidationMessageFor(model => model.oldAdminPwd, "", new { @style = "color:red" })
                <div id="oldAdminPwd-group" class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(x => x.oldAdminPwd, new { type = "password" })
                        <span id="oldAdminTogglePwd" class="fa fa-fw fa-eye field_icon" />
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="span3">New Administrator Password: </div>
            <div class="span6">
                @Html.ValidationMessageFor(model => model.newAdminPwd, "", new { @style = "color:red" })
                <div id="newAdminPwd-group" class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(x => x.newAdminPwd, new { type = "password" })
                        <span id="newAdminTogglePwd" class="fa fa-fw fa-eye field_icon" />
                    </div>
                </div>
            </div>
        </div>

        <div id="buttons" class="row">
            <div class="span12">
                <button class="btn" type="submit" value="Save" formaction="Edit">
                    Submit
                </button>
                <button class="btn" type="submit" value="Cancel">
                    Cancel
                </button>
            </div>
        </div>
    }
</body>
</html>